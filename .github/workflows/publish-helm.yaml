name: Publish Helm

on:
  release:
    types: [published]

env:
  HELM_VERSION: v3.11.3
  CHART_DIR: chart
  REGISTRY: ghcr.io
  WORKFLOW_USER_NAME: ERP4SME-DevOps-GitHub-Workflow-User
  WORKFLOW_USER_EMAIL: 134080766+ERP4SME-DevOps-GitHub-Workflow-User@users.noreply.github.com

defaults:
  run:
    shell: bash

jobs:
  validate:
    runs-on: ubuntu-22.04

    steps:
    - name: Validate chart version
      run: |
        chart_version=$(yq .version $CHART_DIR/Chart.yaml)
        if [ "$chart_version" != "${{ github.event.release.tag_name }}" ]; then
          echo "Version in $CHART_DIR/Chart.yaml ($chart_version) does not match release version (${{ github.event.release.tag_name }})"
          exit 1
        fi

  publish-to-pages:
    permissions:
      contents: write
      pages: write
      id-token: write
    concurrency:
      group: "pages"
      cancel-in-progress: false
    environment:
      name: github-pages
      url: ${{ steps.publish-index.outputs.page_url }}
    runs-on: ubuntu-22.04
    needs: validate

    steps:
    - uses: azure/setup-helm@v3
      with:
       version: ${{ env.HELM_VERSION }}

    - name: Checkout
      uses: actions/checkout@v3

    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: helm-index
        path: index

    - name: Setup Pages
      uses: actions/configure-pages@v3

    - name: Create package
      run: |
        helm package --version ${{ github.event.release.tag_name }} $CHART_DIR

    - name: Create index
      run: |
        helm repo index --url ${{ github.server_url }}/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }} --merge ./index/index.yaml .
        mv index.yaml index
        cd index
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add index.yaml
        git commit -m "Release ${{ github.event.release.tag_name }}"
        git push

    - name: Upload package
      run: |
        upload_url="${{ github.event.release.upload_url }}"
        upload_url=${upload_url%%\{*\}}
        chart_name=$(yq .name $CHART_DIR/Chart.yaml)
        file=$chart_name-${{ github.event.release.tag_name }}.tgz
        echo "Uploading $file to $upload_url ..."
        curl -sSf \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: $(file -b --mime-type $file)" \
          --data-binary @$file \
          "$upload_url?name=$(basename $file)"

    - name: Upload index
      uses: actions/upload-pages-artifact@v1
      with:
        path: index

    - name: Publish index
      id: publish-index
      uses: actions/deploy-pages@v2

  publish-to-packages:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    needs: validate

    steps:
    - uses: azure/setup-helm@v3
      with:
       version: ${{ env.HELM_VERSION }}

    - name: Checkout
      uses: actions/checkout@v3

    - name: Create package
      run: |
        helm package --version ${{ github.event.release.tag_name }} $CHART_DIR

    - name: Login to the OCI registry
      run: |
        helm --registry-config $RUNNER_TEMP/helm-config.json registry login $REGISTRY -u ${{ github.actor }} --password-stdin <<< ${{ secrets.GITHUB_TOKEN }}

    - name: Upload package
      run: |
        chart_name=$(yq .name $CHART_DIR/Chart.yaml)
        file=$chart_name-${{ github.event.release.tag_name }}.tgz
        repository=${{ github.repository }}
        helm --registry-config $RUNNER_TEMP/helm-config.json push $file oci://$REGISTRY/${repository,,}

  update-cop:
    runs-on: ubuntu-22.04
    needs: validate
    env:
      COP_REPOSITORY: ${GITHUB_REPOSITORY/-helm/-cop}

    steps:
    - name: Process environment variables
      run: |
        echo "COP_REPOSITORY=$(eval echo $COP_REPOSITORY)" >> $GITHUB_ENV

    - name: Checkout
      uses: actions/checkout@v3

    - name: Checkout component operator repository
      uses: actions/checkout@v3
      with:
        repository: ${{ env.COP_REPOSITORY }}
        path: cop-repository
        token: ${{ secrets.WORKFLOW_USER_GH_TOKEN }}

    - name: Update component operator repository
      run: |
        chart_name=$(yq .name $CHART_DIR/Chart.yaml)

        cd cop-repository
        old_version=$(yq .version pkg/operator/data/charts/$chart_name/Chart.yaml)
        new_version=${{ github.event.release.tag_name }}

        higher_version=$(echo -e "$old_version\n$new_version" | sort -r -n -t. -k1 -k2 -k3 | head -n1)
        if [ "$higher_version" != "$new_version" ]; then
          echo "Target version ($new_version) is lower than current version ($old_version); skipping update."
          exit 0
        fi

        echo "Updating chart (pkg/operator/data/charts/$chart_name) ..."
        rm -rf pkg/operator/data/charts/$chart_name
        cp -r ../$CHART_DIR pkg/operator/data/charts/$chart_name

        if [ -z "$(git status --porcelain)" ]; then
          echo "Nothing has changed; skipping update."
          exit 0
        fi

        git config user.name "$WORKFLOW_USER_NAME"
        git config user.email "$WORKFLOW_USER_EMAIL"
        git add -A
        git commit -F- <<END
        Update chart (triggered by operator helm release $new_version)
        Repository: ${{ github.repository }}
        Release: ${{ github.event.release.tag_name }}
        Commit: ${{ github.sha }}"
        END
        git push
